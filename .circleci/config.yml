version: 2.1

parameters:
  browser_type:
    type: string
    default: "chrome"

executors:
  maven-executor:
    docker:
      - image: cimg/openjdk:11.0-browsers
    environment:
      CHROME_BIN: /usr/bin/google-chrome
      FIREFOX_BIN: /usr/bin/firefox
      TEST_BROWSER: << pipeline.parameters.browser_type >>

jobs:
  build_regression:
    executor: maven-executor
    steps:
      - checkout
      - run:
          name: Set Timezone
          command: echo 'export TZ="/usr/share/zoneinfo/America/Toronto"' >> $BASH_ENV
      - run:
          name: Update Packages
          command: sudo apt-get update
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: "Create directory for test results"
          command: mkdir -p ~/cucumber
      - run:
          name: Run Regression Tests
          command: |
           #circleci tests glob "src/test/resources/parallelExecution/**/*.feature" | circleci tests run --command="xargs mvn test -Dbrowser=${TEST_BROWSER} -Dcucumber.filter.tags=\"@Regression or @Smoke\" -Dcucumber.options='--plugin junit:~/cucumber/junit.xml'" --verbose --split-by=timings   
           circleci tests glob "src/test/resources/parallelExecution/**/*.feature" | circleci tests run --command="xargs -I {} mvn clean verify -Dbrowser=${TEST_BROWSER} -Dcucumber.features-{} -Dcucumber.filter.tags=\"@Regression or @Smoke\"" --verbose    
      - store_test_results:
          path: target/junit-reports/junit.xml
      - store_artifacts:
          path: test-output/SparkReport/
          destination: spark_report
      - store_artifacts:
          path: PdfReport/ExtentPdf.pdf
          destination: pdf_reports
      - store_artifacts:
          path: ~/cucumber
          destination: JUnit_xml
  build_smoke:
    executor: maven-executor
    steps:
      - checkout
      # - run:
      #     name: Check for new commits in the last 2 minutes
      #     command: |
      #       TIME_2_MINUTES_AGO_UTC=$(date -u -d '2 minutes ago' +%Y-%m-%dT%H:%M:%SZ)
      #       TIME_2_MINUTES_AGO_EST=$(date -u -d "$TIME_2_MINUTES_AGO_UTC -5 hours" +%Y-%m-%dT%H:%M:%SZ)
      #       LAST_COMMIT_TIME=$(git log -1 --pretty=format:%cd --date=iso-strict)
      #       LAST_COMMIT_TIME_UTC=$(date -u -d "$LAST_COMMIT_TIME" +%Y-%m-%dT%H:%M:%SZ)
      #       LAST_COMMIT_TIME_EST=$(date -u -d "$LAST_COMMIT_TIME_UTC -5 hours" +%Y-%m-%dT%H:%M:%SZ)
      #       echo "Last commit time (EST): $LAST_COMMIT_TIME_EST"
      #       echo "Time 2 minutes ago (EST): $TIME_2_MINUTES_AGO_EST"
      #       if [[ "$LAST_COMMIT_TIME_EST" > "$TIME_2_MINUTES_AGO_EST" ]]; then 
      #         echo "New commits found. Proceeding with build."
      #       else
      #         echo "No new commits in the last 2 minutes. Exiting."
      #         circleci-agent step halt
      #       fi
      - run:
          name: Set Timezone
          command: echo 'export TZ="/usr/share/zoneinfo/America/Toronto"' >> $BASH_ENV
      - run:
          name: Update Packages
          command: sudo apt-get update
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Run Smoke Tests
          command: circleci tests glob "src/test/resources/parallelExecution/**/*.feature" | circleci tests run --command="xargs -I {} mvn clean verify -Dbrowser=${TEST_BROWSER} -Dcucumber.features-{} -Dcucumber.filter.tags=\"@Regression or @Smoke\"" --verbose --split-by=timings
      - store_test_results:
          path: target/junit-reports/junit.xml
      - store_artifacts:
          path: test-output/SparkReport/
          destination: spark_report
      - store_artifacts:
          path: PdfReport/ExtentPdf.pdf
          destination: pdf_reports
      - store_artifacts:
          path: target/junit-reports/junit.xml
          destination: JUnit_xml
      
workflows:
  regression_workflow:
    jobs:
      - build_regression:
          filters:
            branches:
              only:
                - child
  # smoke_workflow:
  #  triggers:
  #   - schedule:
  #      #cron: "2 9 * * *"
  #      filters:
  #       branches:
  #         only:
  #          - child
  #  jobs:
  #   - build_smoke
    
         
 
          
      
